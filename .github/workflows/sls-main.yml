name: SALES LEADS SCRAPER MAIN CI

on:
  push:
    branches:
      - main

env:
  NX_BRANCH: "main"
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: load npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: npm install
        run: npm ci
      - name: affected:build
        run: npm run affected:build -- --parallel --all --prod

  integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: load npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: npm install
        run: npm ci
      - name: affected:test
        run: npm run affected:integration -- --parallel --all

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: load npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: npm install
        run: npm ci
      - name: affected:lint
        run: npm run affected:lint -- --parallel --all
        env:
          CI: true

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: load npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: npm install
        run: npm ci
      - name: affected:test
        run: npm run affected:test -- --parallel --all

  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: checkout
        run: git checkout main
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: load npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: npm install
        run: npm ci
      - name: validate nx tags
        run: node ./node_modules/@valueadd/dev validate-nx-tags
      - name: prettier check
        run: npm run format:check

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: load npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: prepare for deploy
        run: npm ci && npm run nx deploy
      - uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: salesLeadsScraper
          runtime: nodejs12
          credentials: ${{ secrets.GOOGLE_CLOUD_KEY }}
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
          source_dir: ./dist/apps/sales-leads-scraper
          env_vars: IS_IN_CLOUD=true,DB_DATABASE=${{ secrets.DB_DATABASE }},DB_PORT=${{ secrets.DB_PORT }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_USERNAME=${{ secrets.DB_USERNAME }},DB_HOST=${{ secrets.DB_HOST }},DB_TYPE=${{ secrets.DB_TYPE }}
